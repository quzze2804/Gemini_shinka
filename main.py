–ö–∏—Ä–∏–ª–ª, [1 –∏—é–ª. 2025 –≤ 15:20]
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    CallbackQueryHandler,
    ContextTypes,
    ConversationHandler,
)
import datetime
import os 
import pytz 

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ë–û–¢–ê ---
BOT_TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN", "7646808754:AAFEd_-JuxKF7jy4_xbRvolfDBbbCHy6Tt8") 

try:
    ADMIN_CHAT_ID = int(os.environ.get("ADMIN_USER_ID", "7285220061"))
except (ValueError, TypeError):
    ADMIN_CHAT_ID = None 
    logging.warning("ADMIN_USER_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É –º–æ–≥—É—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å.")

TIMEZONE = pytz.timezone('Europe/Kiev') 

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏–π ConversationHandler
ASK_NAME, ASK_PHONE = range(2)
RESCHEDULE_SELECT_DATE, RESCHEDULE_SELECT_TIME = range(2, 4) 

# --- –ö–û–ù–ï–¶ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò ---


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

booked_slots = {}

async def notify_admin_new_booking(context: ContextTypes.DEFAULT_TYPE, booking_info: dict) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –Ω–æ–≤–æ–π –±—Ä–æ–Ω–∏ —Å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏."""
    if ADMIN_CHAT_ID is None:
        logger.warning("ADMIN_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        return

    message = (
        f"üîî **–ù–û–í–ê–Ø –ó–ê–ü–ò–°–¨!**\n\n"
        f"**–ö–ª–∏–µ–Ω—Ç:** {booking_info.get('client_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')} "
        f"(Telegram: {booking_info.get('telegram_user_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}, ID: {booking_info['user_id']})\n"
        f"**–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:** {booking_info.get('phone_number', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"**–î–∞—Ç–∞:** {booking_info['date'].strftime('%d.%m.%Y')}\n"
        f"**–í—Ä–µ–º—è:** {booking_info['time']}"
    )
    try:
        await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=message, parse_mode='Markdown')
        logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {ADMIN_CHAT_ID}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: {e}")

async def notify_admin_cancellation(context: ContextTypes.DEFAULT_TYPE, booking_info: dict) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ–± –æ—Ç–º–µ–Ω–µ –±—Ä–æ–Ω–∏."""
    if ADMIN_CHAT_ID is None:
        logger.warning("ADMIN_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        return

    message = (
        f"‚ùå **–û–¢–ú–ï–ù–ê –ó–ê–ü–ò–°–ò!**\n\n"
        f"**–ö–ª–∏–µ–Ω—Ç:** {booking_info.get('client_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')} "
        f"(Telegram: {booking_info.get('telegram_user_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}, ID: {booking_info['user_id']})\n"
        f"**–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:** {booking_info.get('phone_number', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"**–û—Ç–º–µ–Ω–µ–Ω–∞ –¥–∞—Ç–∞:** {booking_info['date'].strftime('%d.%m.%Y')}\n"
        f"**–û—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä–µ–º—è:** {booking_info['time']}"
    )
    try:
        await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=message, parse_mode='Markdown')
        logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ –∑–∞–ø–∏—Å–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {ADMIN_CHAT_ID}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: {e}")

async def notify_admin_reschedule(context: ContextTypes.DEFAULT_TYPE, old_booking: dict, new_booking: dict) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –ø–µ—Ä–µ–Ω–æ—Å–µ –±—Ä–æ–Ω–∏."""
    if ADMIN_CHAT_ID is None:
        logger.warning("ADMIN_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        return

    message = (
        f"üîÑ **–ü–ï–†–ï–ù–û–° –ó–ê–ü–ò–°–ò!**\n\n"
        f"**–ö–ª–∏–µ–Ω—Ç:** {new_booking.get('client_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')} "
        f"(Telegram: {new_booking.get('telegram_user_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}, ID: {new_booking['user_id']})\n"
        f"**–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:** {new_booking.get('phone_number', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n\n"
        f"**–°—Ç–∞—Ä–∞—è –∑–∞–ø–∏—Å—å:**\n"
        f"  –î–∞—Ç–∞: {old_booking['date'].strftime('%d.%m.%Y')}\n"
        f"  –í—Ä–µ–º—è: {old_booking['time']}\n\n"
        f"**–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å:**\n"
        f"  –î–∞—Ç–∞: {new_booking['date'].
